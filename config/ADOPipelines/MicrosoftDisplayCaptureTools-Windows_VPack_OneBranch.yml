#####################################################################################################################################
#                                               OneBranch Pipelines - Official                                                      #
#####################################################################################################################################
#                                                                                                                                   #
# This pipeline was created by EasyStart from a sample located at:                                                                  #
#                               https://aka.ms/obpipelines/easystart/samples                                                        #
#                                                                                                                                   #
# OB Windows Undocked Wiki:     https://aka.ms/wud/template                                                                         #
# General OB Documentation:     https://aka.ms/obpipelines                                                                          #
# Build MSBuild project:        https://dev.azure.com/onebranch/OneBranch/_wiki/wikis/OneBranch.wiki/6045/Build-MSBuild-project     #
# Yaml Schema:                  https://aka.ms/obpipelines/yaml/schema                                                              #
# Retail Tasks:                 https://aka.ms/obpipelines/tasks                                                                    #
# Support:                      https://aka.ms/onebranchsup                                                                         #
#                                                                                                                                   #
#####################################################################################################################################

# Add this for VPack versioning when using Package ES Setup task
# name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)

# https://aka.ms/obpipelines/triggers
trigger: none 

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false
- name: PackageNameSuffix
  type: string
  default: Ge
  values:
  - Ge

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 1
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: none
  OWNER_ALIAS: microsoftdisplaycapturetools@microsoft.com
  BRANCH_NAME: ${{replace(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), '/', '_')}}
  VPACK_NAME: Microsoft.$(Build.Repository.Name)Undocked-$(BRANCH_NAME)-${{parameters.PackageNameSuffix}}
  PRE_RELEASE_VERSION: $(Build.BuildId)
  VPACK_METADATA: $(Build.SourceVersion)

  # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest' 

  Codeql.Enabled: true #  CodeQL once every 3 days on the default branch for all languages its applicable to in that pipeline.

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/Microsoft.Official.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    platform:
      name: 'windows_undocked' # windows undocked
            
    cloudvault: # Please refer the wiki for more information: https://aka.ms/obpipelines/cloudvault
      enabled: false
    
    globalSdl: # Refer the wiki for more options in this parameter: https://aka.ms/obpipelines/sdl
      tsa:
        enabled: true # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.  Please provide TSAOptions.json.
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress

    #   updateOSManifest: # Information for updating OS Manifest OS repository (Learn more: https://aka.ms/wud/template)
    #     enabled: true
    #     osbranch: << Branch of the repo to fetch from >>
    #     source: << Path to the file to fetch >>
    #     destination: << Path to folder where file should be fetched to >>
    #     manifest: << Path(s) to location of a vPack manifest to update the downloaded manifest from. >>
    # ##    << Please refer wiki for more Update OS Manifest options >>
    
    featureFlags:
      createVPack: # Information for Trusted Vpack (https://www.osgwiki.com/wiki/Windows_Build_Tools_Template)
        enabled: true
        packagename: $(VPACK_NAME)
        description: 'MicrosoftDisplayCaptureTools Undocked Files'
        owneralias: $(OWNER_ALIAS)
        provData: true
        versionAs: Parts
        majorVer: $(VPackVersion.Major)
        minorVer: $(VPackVersion.Minor)
        patchVer: $(VPackVersion.Patch)
        prereleaseVer: $(PRE_RELEASE_VERSION)
        metadata: $(VPACK_METADATA)

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs
          type: windows  
        
        variables:
          # binaries scanning tools are run on this directory ( https://onebranch.visualstudio.com/OneBranch/_wiki/wikis/OneBranch.wiki/4634/SDL-(Static-Analysis)-for-Containerized-Workflows ) and 
          # this directory is uploaded to pipeline artifacts. More info at https://aka.ms/obpipelines/artifacts
          ob_outputDirectory: '$(REPOROOT)\out' 

          # createVPack: # information for Vpack (Learn more: https://aka.ms/wud/template)
          ob_createvpack_enabled: true
          ob_createvpack_packagename: VPACK_PACKAGE_NAME
          ob_createvpack_description: VPACK_DESCRIPTION
          ob_createvpack_owneralias: $(OWNER_ALIAS)
          ob_createvpack_versionAs: string
          ob_createvpack_version: X.Y.Z-T
          ob_createvpack_propsFile: true
          ob_createvpack_verbose: true
          # ##    << Please refer wiki for more Vpack options >>

        steps:
          - checkout: self
            env:
              ob_restore_phase: true
            clean: true
            fetchDepth: 1
            submodules: true
            persistCredentials: true

          - task: DeleteFiles@1
            env:
              ob_restore_phase: true
            displayName: 'Clean packages directory'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/packages'

          - task: NuGetAuthenticate@1
            env:
              ob_restore_phase: true
            inputs:
              forceReinstallCredentialProvider: true

          - task: NuGetCommand@2
            displayName: 'NuGet Restore'
            env:
              ob_restore_phase: true
            inputs:
              restoreDirectory: packages
              nugetConfigPath: 'nuget.config'
              restoreSolution: '*.sln'
              feedsToUse: 'config'

          - task: onebranch.pipeline.version@1 # generates automatic version. For other versioning options check https://aka.ms/obpipelines/versioning
            displayName: 'Setup BuildNumber'
            inputs:
              system: 'RevisionCounter'
              major: '1'
              minor: '0'
              exclude_commit: true

          - task: VSBuild@1
            displayName: 'Visual Studio 2022 Build, Debug x64'
            inputs:
              solution: '**\*.sln'
              vsVersion: '17.0'
              platform: 'x64'
              configuration: 'debug'
              
          - task: VSBuild@1
            displayName: 'Visual Studio 2022 Build, Release x64'
            inputs:
              solution: '**\*.sln'
              vsVersion: '17.0'
              platform: 'x64'
              configuration: 'release'
              
          - task: VSBuild@1
            displayName: 'Visual Studio 2022 Build, Debug ARM64'
            inputs:
              solution: '**\*.sln'
              vsVersion: '17.0'
              platform: 'ARM64'
              configuration: 'debug'
              
          - task: VSBuild@1
            displayName: 'Visual Studio 2022 Build, Release ARM64'
            inputs:
              solution: '**\*.sln'
              vsVersion: '17.0'
              platform: 'ARM64'
              configuration: 'release'

          - task: onebranch.pipeline.signing@1 # https://aka.ms/obpipelines/signing
            displayName: 'Sign output'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              files_to_sign: '**/*.exe;**/*.dll;**/*.ps1;**/*.winmd'
              search_root: '$(Build.SourcesDirectory)\out'

