namespace HardwareCaptureTesting.Operations
{
    // ToolCategory
    // -------------------------------------------------------------------------------------------------
    // This indicates the relative order in which tools are to be applied. Consider a test scenario which
    // has an HDR display and specific HDR Metadata - the tool which sets the display's mode must go be
    // exercised before the tool setting the metadata.
    enum ToolCategory
    {
        DisplayMode = 1,
        Immediate = 2,
        Recurring = 3,
    };

    // get flags

    [default_interface]
    runtimeclass Toolbox
    {
        // Toolbox
        // -------------------------------------------------------------------------------------------------
        // Initializes the toolbox
        // -------------------------------------------------------------------------------------------------
        // Parameters:
        //   displayManager - Provides the object which manages ownership and allows modifying display state
        //   displayPath    - Specifies the path of the specific output under test
        //
        Toolbox(Windows.Devices.Display.Core.DisplayManager displayManager, Windows.Devices.Display.Core.DisplayPath displayPath);

        // GetSupportedTools
        // -------------------------------------------------------------------------------------------------
        // Returns a list of all tools in this toolbox.
        // -------------------------------------------------------------------------------------------------
        // Returns:
        //   returns an immutable map with entries indicating the supported tools' names and categories.
        //
        // Notes:
        //   This will be used to organize tool usage into a repeatable set of instructions broken over all
        //   registered toolboxes.
        //
        IMapView<String, ToolCategory> GetSupportedTools();

        // ValidateToolParameters
        // -------------------------------------------------------------------------------------------------
        // Validates tool conditions and parameters
        // -------------------------------------------------------------------------------------------------
        // Parameters:
        //   toolName   - The name of the tool
        //   toolParams - The PICT-specificed parameter to supply to this tool
        //
        // Notes:
        //   The idea here is to try and fail out of test scenarios early if for some reason the test can't
        //   be executed.
        //
        void ValidateToolParameters(String toolName, String toolParams);

        // ExerciseTool
        // -------------------------------------------------------------------------------------------------
        // Exercises the tool
        // -------------------------------------------------------------------------------------------------
        // Parameters:
        //   toolName   - The name of the tool to create.
        //   toolParams - The PICT-specificed parameter to supply to this tool
        //
        void ExerciseTool(String toolName, String toolParams);
    }
}