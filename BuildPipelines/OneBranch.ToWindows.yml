#####################################################################################################################################
#                                               OneBranch Pipelines - PR Build                                                      #
#####################################################################################################################################
#                                                                                                                                   #
# This pipeline was created by EasyStart from a sample located at:                                                                  #
#                               https://aka.ms/obpipelines/easystart/samples                                                        #
#                                                                                                                                   #
# Windows Undocked Wiki:        https://www.osgwiki.com/wiki/Windows_Undocked_Template                                              #
# General OB Documentation:     https://aka.ms/obpipelines                                                                          #
# Build MSBuild project:        https://dev.azure.com/onebranch/OneBranch/_wiki/wikis/OneBranch.wiki/6045/Build-MSBuild-project     #
# Yaml Schema:                  https://aka.ms/obpipelines/yaml/schema                                                              #
# Retail Tasks:                 https://aka.ms/obpipelines/tasks                                                                    #
# Support:                      https://aka.ms/onebranchsup                                                                         #
#                                                                                                                                   #
#####################################################################################################################################

# https://aka.ms/obpipelines/triggers
trigger: none 

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 1
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: none

  # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest' 

  Codeql.Enabled: true #  CodeQL once every 3 days on the default branch for all languages its applicable to in that pipeline.
  
resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/Microsoft.NonOfficial.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    platform:
      name: 'windows_undocked' # windows undocked
    
    globalSdl: # Refer the wiki for more options in this parameter: https://aka.ms/obpipelines/sdl
      tsa:
        enabled: false # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs
          type: windows  
        
        variables:
          # binaries scanning tools are run on this directory ( https://onebranch.visualstudio.com/OneBranch/_wiki/wikis/OneBranch.wiki/4634/SDL-(Static-Analysis)-for-Containerized-Workflows ) and 
          # this directory is uploaded to pipeline artifacts. More info at https://aka.ms/obpipelines/artifacts
          ob_outputDirectory: '$(REPOROOT)\out' 

        steps:
          - task: UseDotNet@2
            continueOnError: true
            inputs:
              packageType: 'sdk'
              useGlobalJson: true
              performMultiLevelLookup: true

          - task: onebranch.pipeline.version@1 # generates automatic version. For other versioning options check https://aka.ms/obpipelines/versioning
            displayName: 'Setup BuildNumber'
            inputs:
              system: 'RevisionCounter'
              major: '1'
              minor: '0'
              exclude_commit: true

          - task: MSBuild@1
            inputs:
              solution: '$(Build.SourcesDirectory)\dirs.proj'
              msbuildLocationMethod: 'version'
              msbuildVersion: 'latest'
              platform: 'x64'
              configuration: 'release'
              msbuildArguments: '/t:Restore'
              clean: true
              maximumCpuCount: true
              logProjectEvents: true
              createLogFile: true

          - task: MSBuild@1
            inputs:
              solution: '$(Build.SourcesDirectory)\dirs.proj'
              msbuildLocationMethod: 'version'
              msbuildVersion: 'latest'
              platform: 'x64'
              configuration: 'release'
              msbuildArguments: '/v:n /nr:false /flp1:Verbosity=d;LogFile=$(OUTPUTROOT)\logs\msbuild_x64_release.log;Encoding=UTF-8 /flp2:logfile=$(OUTPUTROOT)\logs\msbuild_x64_release.err;errorsonly /bl:$(OUTPUTROOT)\logs\msbuild_x64_release.binlog'
              clean: true
              maximumCpuCount: true
              logProjectEvents: true
              createLogFile: true

          - task: VSTest@2
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                **\*test*.dll
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: '$(Build.SourcesDirectory)\out'
              resultsFolder: '$(Build.SourcesDirectory)\out\logs\TestResults'
              runInParallel: true
              codeCoverageEnabled: true
              testRunTitle: 'release_x64'
              platform: 'x64'
              configuration: 'release'
              publishRunAttachments: false
              failOnMinTestsNotRun: true
              rerunFailedTests: true

          - task: PublishTestResults@2
            displayName: 'Publish test results'
            inputs:
              testResultsFormat: VSTest
              testResultsFiles: '$(Build.SourcesDirectory)\out\logs\TestResults\**\*.trx'
              failTaskOnFailedTests: true

# https://aka.ms/obpipelines/cloudtest
# uncomment this section and edit parameters to enable CloudTest
    # - stage: cloudtest
    #   dependsOn: build_stage
    #   jobs:
    #   - job: cloudtestjob
    #     pool:
    #       type: cloudtestagentless
    #     continueOnError: true
    #     steps:
    #     - task: CloudTestServerBuildTask@1
    #       displayName: 'CloudTest'
    #       inputs:
    #         connectedServiceName: 'CloudTest-prod'
    #         cloudTestTenant: 'onebranchtest'
    #         testMapLocation: '[BuildRoot]\ClassLibrary.UnitTest\TestMapCdp.xml'
    #         pipelineArtifactName: 'drop_build_main'
    #         pipelineArtifactBuildUrl: '$(System.TaskDefinitionsUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)'
    #         parserProperties: 'worker:VsTestVersion=V150;CodeCoverageType=Dynamic;worker:TestVar=$(RUN_PIPELINE_VARIABLE)'
    #         cacheEnabled: false
    #         scheduleBuildRequesterAlias: 'azbldrun'